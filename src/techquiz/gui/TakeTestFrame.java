/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package techquiz.gui;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import techquiz.dao.PerformanceDAO;
import techquiz.dao.QuestionDAO;
import techquiz.pojo.AnswerPOJO;
import techquiz.pojo.AnswerStorePOJO;
import techquiz.pojo.ExamPOJO;
import techquiz.pojo.PerformancePOJO;
import techquiz.pojo.QuestionPOJO;
import techquiz.pojo.QuestionsStore;
import techquiz.pojo.UserProfile;

/**
 *
 * @author SHUBHAM MANMOHAN
 */
public class TakeTestFrame extends javax.swing.JFrame {

    private ExamPOJO exam;
    private QuestionsStore qstore;
    private AnswerStorePOJO astore;
    
    private int qno,pos=0;

    
    
    /**
     * Creates new form TakeTestFrame
     */
    
    public TakeTestFrame(ExamPOJO exam)
    {
         this();
         this.exam=exam;
         lblPaper.setText(exam.getSubject().toUpperCase()+" PAPER");
         loadQuestions();
         showQuestion();
         TimeThread tt=new TimeThread(exam);
         tt.start();
    }
    
    
    public TakeTestFrame() {
         this.setTitle("Take Test - "+"OnlineTechQuizApp");
        initComponents();
        this.setLocationRelativeTo(null);
        lblUser.setText("Hello "+UserProfile.getUserName());
        qstore=new QuestionsStore();
        astore=new AnswerStorePOJO();
        qno=1;
        lblQuestionNo.setText("Question No:"+qno);
        
    }
    
   


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblUser = new javax.swing.JLabel();
        lblPaper = new javax.swing.JLabel();
        lblQuestionNo = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtQuestion = new javax.swing.JTextArea();
        jrbOption3 = new javax.swing.JRadioButton();
        jrbOption2 = new javax.swing.JRadioButton();
        jrbOption1 = new javax.swing.JRadioButton();
        jrbOption4 = new javax.swing.JRadioButton();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        lblTime = new javax.swing.JLabel();
        lblLogout = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        lblUser.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblUser.setForeground(new java.awt.Color(255, 204, 204));
        lblUser.setText("Hello");

        lblPaper.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblPaper.setForeground(new java.awt.Color(153, 204, 255));
        lblPaper.setText("                                       PAPER");

        lblQuestionNo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblQuestionNo.setForeground(new java.awt.Color(255, 204, 204));
        lblQuestionNo.setText("Question No:     ");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techquiz/gui/appimages/good luck2 - Copy.jpg"))); // NOI18N

        txtQuestion.setEditable(false);
        txtQuestion.setColumns(20);
        txtQuestion.setRows(5);
        jScrollPane1.setViewportView(txtQuestion);

        jrbOption3.setBackground(new java.awt.Color(0, 153, 153));
        buttonGroup1.add(jrbOption3);
        jrbOption3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jrbOption3.setForeground(new java.awt.Color(255, 153, 153));
        jrbOption3.setText(" ");

        jrbOption2.setBackground(new java.awt.Color(0, 153, 153));
        buttonGroup1.add(jrbOption2);
        jrbOption2.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jrbOption2.setForeground(new java.awt.Color(255, 153, 153));

        jrbOption1.setBackground(new java.awt.Color(0, 153, 153));
        buttonGroup1.add(jrbOption1);
        jrbOption1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jrbOption1.setForeground(new java.awt.Color(255, 153, 153));
        jrbOption1.setDoubleBuffered(true);

        jrbOption4.setBackground(new java.awt.Color(0, 153, 153));
        buttonGroup1.add(jrbOption4);
        jrbOption4.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jrbOption4.setForeground(new java.awt.Color(255, 153, 153));

        btnNext.setBackground(new java.awt.Color(204, 204, 204));
        btnNext.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnNext.setForeground(new java.awt.Color(255, 102, 51));
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrevious.setBackground(new java.awt.Color(204, 204, 204));
        btnPrevious.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnPrevious.setForeground(new java.awt.Color(255, 102, 51));
        btnPrevious.setText("Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnSubmit.setBackground(new java.awt.Color(204, 204, 204));
        btnSubmit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(255, 102, 51));
        btnSubmit.setText("Submit Paper");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        lblTime.setBackground(new java.awt.Color(0, 153, 153));
        lblTime.setFont(new java.awt.Font("Tahoma", 1, 19)); // NOI18N
        lblTime.setForeground(new java.awt.Color(153, 255, 102));
        lblTime.setText("Time Left: ");

        lblLogout.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblLogout.setForeground(new java.awt.Color(204, 204, 204));
        lblLogout.setText("Logout");
        lblLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLogoutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblLogoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblLogoutMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblUser, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblPaper)
                                .addGap(115, 115, 115)
                                .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblLogout))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNext)
                        .addGap(59, 59, 59)
                        .addComponent(btnPrevious)
                        .addGap(147, 147, 147)
                        .addComponent(btnSubmit))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 2, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jrbOption1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jrbOption2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jrbOption3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jrbOption4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblQuestionNo))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPaper)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblUser, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblLogout)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(163, 163, 163))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblQuestionNo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jrbOption1)
                        .addGap(18, 18, 18)
                        .addComponent(jrbOption2)
                        .addGap(18, 18, 18)
                        .addComponent(jrbOption3)
                        .addGap(17, 17, 17)
                        .addComponent(jrbOption4)
                        .addGap(35, 35, 35)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrevious)
                    .addComponent(btnNext)
                    .addComponent(btnSubmit))
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
      String chosenAnswer=getUserAnswer();
 //       System.out.println("Next: choosen ans"+chosenAnswer);
        if(chosenAnswer!=null)
        {
         QuestionPOJO question=qstore.getQuestionByQno(qno);
         String correctAnswer=question.getCorrectAnswer();
         AnswerPOJO newanswer=new AnswerPOJO(exam.getExamId(),exam.getSubject(),qno,chosenAnswer,correctAnswer);
  //       System.out.println(newanswer);
         AnswerPOJO answer=astore.getAnswerByQno(qno);
         if(answer==null)
         {
             astore.addAnswer(newanswer);
         }
         else
         {
            String prevAnswer=answer.getChosenAnswer();
            if(prevAnswer.equals(chosenAnswer)==false)
            {
                
                int apos=astore.removeAnswer(answer);
                astore.setAnswerAt(apos, newanswer);
            }
         }
       }
        pos++;
        if(pos>=qstore.getCount())
        {
            pos=0;
        }
         qno++;         
        if(qno>qstore.getCount())
        {
                qno=1;
        }
        lblQuestionNo.setText("Question no:"+qno);
        showQuestion();

    }//GEN-LAST:event_btnNextActionPerformed

     public String getUserAnswer(){
        
        if(jrbOption1.isSelected())
            return "Answer1";
        else if(jrbOption2.isSelected())
            return "Answer2";
        else if(jrbOption3.isSelected())
            return "Answer3";
        else if(jrbOption4.isSelected())
            return "Answer4";
        else
            return null;
    }
    
    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
     String chosenAnswer=getUserAnswer();
        if(chosenAnswer!=null)
        {
         QuestionPOJO question=qstore.getQuestionByQno(qno);
         String correctAnswer=question.getCorrectAnswer();
         AnswerPOJO newanswer=new AnswerPOJO(exam.getExamId(),exam.getSubject(),qno,chosenAnswer,correctAnswer);
  //       System.out.println(newanswer);
         AnswerPOJO answer=astore.getAnswerByQno(qno);
         if(answer==null)
             astore.addAnswer(newanswer);
         else
         {
            String prevAnswer=answer.getChosenAnswer();
            if(prevAnswer.equals(chosenAnswer)==false)
            {
                int apos=astore.removeAnswer(answer);
                astore.setAnswerAt(apos, newanswer);
            }
         }
       }
        pos--;
        if(pos<0)
        {
            pos=qstore.getCount()-1;
        }
         qno--;         
        if(qno<=0)
        {
                qno=qstore.getCount();
        }
        lblQuestionNo.setText("Question no: "+qno);
        showQuestion();
    }//GEN-LAST:event_btnPreviousActionPerformed

    
    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
      
        String chosenAnswer=getUserAnswer();
        if(chosenAnswer!=null)
        {
         QuestionPOJO question=qstore.getQuestionByQno(qno);
         String correctAnswer=question.getCorrectAnswer();
         AnswerPOJO newanswer=new AnswerPOJO(exam.getExamId(),exam.getSubject(),qno,chosenAnswer,correctAnswer);
  //       System.out.println(newanswer);
         AnswerPOJO answer=astore.getAnswerByQno(qno);
         if(answer==null)
             astore.addAnswer(newanswer);
         else
         {
            String prevAnswer=answer.getChosenAnswer();
             
            if(prevAnswer.equals(chosenAnswer)==false)
            {
                int apos=astore.removeAnswer(answer);
                astore.setAnswerAt(apos, newanswer);
            }
         }
       }
        int right=0,wrong=0;
        for(QuestionPOJO question:qstore.getAllQuestions())
        {
            int qno=question.getQno();
            AnswerPOJO answer=astore.getAnswerByQno(qno);
            if(answer==null)
                continue;
            else
            {
                String attemptedAnswer=answer.getChosenAnswer();
                String correctAnswer=answer.getCorrectAnswer();
      //        System.out.println("Qno: "+qno+"Attempted ans: "+attemptedAnswer+"Correct ans: "+correctAnswer);
                if(attemptedAnswer.equals(correctAnswer))
                    ++right;
                else
                    ++wrong;
                    
            }
            
        }
        StringBuilder sb=new StringBuilder();
        sb.append("\nRight Answer: "+right);
        sb.append("\nWrong Answer: "+wrong);
        sb.append("\nUnattempted: "+(qstore.getCount()-(right+wrong)));
        JOptionPane.showMessageDialog(null, sb.toString(),"Result!!!",JOptionPane.INFORMATION_MESSAGE);

        try{
            PerformancePOJO performance=new PerformancePOJO(UserProfile.getUserName(),exam.getExamId(),
            exam.getSubject(),right,wrong,(qstore.getCount()-(right+wrong)),(double)right/qstore.getCount()*100);

            PerformanceDAO.addPerformance(performance);
            JOptionPane.showMessageDialog(null, "Your performance has been successfully added to the database"," Performance Added!",JOptionPane.INFORMATION_MESSAGE);
            ChoosePaperFrame paperFrame=new ChoosePaperFrame();
            paperFrame.setVisible(true);
            this.dispose();
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Error while connecting to DB!","Exception!",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }

    }//GEN-LAST:event_btnSubmitActionPerformed

    private void lblLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseClicked
        int ans=JOptionPane.showConfirmDialog(null, "Your Paper will Automatically Submited on Logout!!! \n Are You Sure To Logout","Logout!!!",JOptionPane.YES_NO_OPTION);
        if(ans==JOptionPane.YES_OPTION)
        btnSubmit.doClick();
    }//GEN-LAST:event_lblLogoutMouseClicked

    private void lblLogoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseEntered
      lblLogout.setForeground(Color.WHITE);
        Font f=new Font("Tahoma",Font.ITALIC,16);
        lblLogout.setFont(f);
        Cursor c=new Cursor(Cursor.HAND_CURSOR);
        lblLogout.setCursor(c);
    }//GEN-LAST:event_lblLogoutMouseEntered

    private void lblLogoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseExited
     lblLogout.setForeground(new Color(102,0,51));
         Font f=new Font("Tahoma",Font.BOLD,18);
         lblLogout.setFont(f);
    }//GEN-LAST:event_lblLogoutMouseExited

    
   

    
    public void loadQuestions() {
        try{
                ArrayList<QuestionPOJO> questionList=QuestionDAO.getQuestionsByExamId(exam.getExamId());
                for(QuestionPOJO obj:questionList){
                    qstore.addQuestion(obj);
                }
                System.out.println(qstore);
            }
            catch(SQLException ex){
                JOptionPane.showMessageDialog(null, "Error while connecting to DB!","Exception!",JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
    }

    public void showQuestion(){
        QuestionPOJO question=qstore.getQuestionByQno(qno);
        buttonGroup1.clearSelection();
        txtQuestion.setText(question.getQuestion());
        jrbOption1.setText(question.getAnswer1());
        jrbOption2.setText(question.getAnswer2());
        jrbOption3.setText(question.getAnswer3());
        jrbOption4.setText(question.getAnswer4());
        AnswerPOJO answer=astore.getAnswerByQno(qno);
        if(answer==null)
        {
            return;
        }
        String str=answer.getChosenAnswer();
        switch(str){
            case "Answer1":
                jrbOption1.setSelected(true);
                break;
            case "Answer2":
                jrbOption2.setSelected(true);
                break;
            case "Answer3":
                jrbOption3.setSelected(true);
                break;
            case "Answer4":
                jrbOption4.setSelected(true);
                break;
        }
        
    }

    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TakeTestFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnSubmit;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton jrbOption1;
    private javax.swing.JRadioButton jrbOption2;
    private javax.swing.JRadioButton jrbOption3;
    private javax.swing.JRadioButton jrbOption4;
    private javax.swing.JLabel lblLogout;
    private javax.swing.JLabel lblPaper;
    private javax.swing.JLabel lblQuestionNo;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblUser;
    private javax.swing.JTextArea txtQuestion;
    // End of variables declaration//GEN-END:variables

     class TimeThread extends Thread {
       
        int min;
        int sec=59;

        public TimeThread(ExamPOJO ex){
         this.min=ex.getTotalQuestions();
        
        }

        public void run()
        {  
            
                 while(sec>0)
                 {
                     lblTime.setText("Time Left: "+" "+(min-1)+" : "+sec);
                  try{
                      sec--;
                      Thread.sleep(1000);
                      }
                  catch(InterruptedException ex)
                     {
                     JOptionPane.showMessageDialog(null, "ExceptionIn Thread"," ERROR!!!",JOptionPane.ERROR_MESSAGE);
                     }
                  
                  if(sec==0){
                      
                      int x=min--;
                        if(x==1)
                        {
                         btnSubmit.doClick();
                        }
                      sec=59;
                  }
                }
            
        }
    }
}
